{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/utils.js","webpack:///./src/js/models/HostApplication.js","webpack:///./src/js/models/Host.js","webpack:///./src/js/views/components/titleBarComponent/TitleBarComponent.js","webpack:///./src/js/views/components/appComponent/AppComponent.js","webpack:///./src/js/views/components/hostComponent/HostComponent.js","webpack:///./src/js/views/components/hostGridComponent/HostGridComponent.js","webpack:///./src/js/views/hostPage.js","webpack:///./src/js/index.js","webpack:///./src/js/loaders/appLoader.js","webpack:///./src/js/models/HostTree.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","arr","element","start","end","isEqual","isLess","mid","Math","floor","getElementPosition","position","slice","HostApplication","constructor","version","apdex","this","getName","getVersion","getApdex","app1","app2","NUM_TOP_APPS","Host","appList","appData","addApp","app","_createHostApp","pos","length","Error","toString","insertElement","removeApp","removeElement","getTopApps","getTop5Apps","getHostName","host1","host2","TitleBarComponent","parentNode","userEmail","isList","onChange","onChangeCallback","titleBarContainer","document","createElement","classList","add","titleNode","textContent","emailNode","checkboxInput","setAttribute","checked","addEventListener","_onChange","checkboxText","appendChild","AppComponent","appDiv","alert","apdexField","nameAndContribField","NARROW_STYLE_MODE","WIDE_STYLE_MODE","HostComponent","host","defaultMode","hostDiv","hostName","forEach","changeMode","remove","GRID_MODE","LIST_MODE","HostGridComponent","hostList","hostListContainer","hostNodes","push","hostNode","USER_EMAIL","HostPage","querySelector","attachPage","firstChild","removeChild","titleBar","hostGrid","appLoader","loadApplications","onLoad","onError","fetch","then","response","json","myJson","catch","error","hostTree","_getHostPosition","_getHost","mockHost","_getOrCreateHost","newHost","getTopAppsByHost","addAppToHosts","hostNames","removeAppFromHosts","getHostList","appsData","apps","console","stack","message"],"mappings":"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","file":"js/app.e0cea64c.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","export default class Utils {\n    /**\n     * Implements dichotomic search. Given a sorted array returns the position\n     * in the array where the given element is located. If the given element is\n     * not on the array returns the position where it should be located.\n     *\n     * Cost: O(log(n)) (n -> number of elements on the array)\n     *\n     * Note: I choose to implement a recursive version because it is more\n     * intuitive to read. But a loop version would run much faster:\n     * https://jsperf.com/fibonacci-recursive-or-iterative/4\n     *\n     * @param {Array} arr An array of elements ordered from smaller to bigger.\n     * @param {Any} element Element to find in the array.\n     * @param {Number} start first position of the subarray where we are searching.\n     * @param {Number} end last position of the subarray where we are searching (included).\n     * @param {Function} isEqual Returns true if two elements are equal.\n     * @param {Function} isLess Returns true if the first element is smaller than the second one.\n     */\n    static getElementPosition(arr, element, start, end, isEqual, isLess) {\n        const mid = Math.floor((start + end) / 2);\n\n        if (start > end) return start;\n        if (isEqual(element, arr[mid])) return mid;\n\n        if (isLess(element, arr[mid])) {\n            return Utils.getElementPosition(\n                arr,\n                element,\n                start,\n                mid - 1,\n                isEqual,\n                isLess\n            );\n        }\n\n        return Utils.getElementPosition(\n            arr,\n            element,\n            mid + 1,\n            end,\n            isEqual,\n            isLess\n        );\n    }\n\n    /**\n     * Given an array, creates a new one placing the given element in the given position.\n     * Moves succesive elements one position forward if it is necessary.\n     *\n     * NOTE: This method uses the immutable pattern. We create a new array instead\n     * of modify the existing one. Advantatges: better traceability,\n     * avoid posible bugs and will improve performance if we have a reactive app.\n     * Disadvantatges: creating a new array can take more time than modifying\n     * an existing one.\n     *\n     * Cost: O(n) (n -> number of elements in the array).\n     *\n     * @param {Array} arr Initial array\n     * @param {Any} element Element to insert.\n     * @param {Number} position Where we need to insert the element.\n     */\n    static insertElement(arr, element, position) {\n        return [...arr.slice(0, position), element, ...arr.slice(position)];\n    }\n\n    /**\n     * Given an array, creates a new one without the given position element.\n     * Moves succesive elements one position backward if it is necessary.\n     *\n     * NOTE: This method uses the immutable pattern. We create a new array instead\n     * of modify the existing one. Advantatges: better traceability,\n     * avoid posible bugs and will improve performance if we have a reactive app.\n     * Disadvantatges: creating a new array can take more time than modifying\n     * an existing one.\n     *\n     * Cost: O(n) (n -> number of elements in the array).\n     *\n     * @param {Array} arr Initial array\n     * @param {Any} element Element to insert.\n     * @param {Number} position Where we need to insert the element.\n     */\n    static removeElement(arr, position) {\n        return [...arr.slice(0, position), ...arr.slice(position + 1)];\n    }\n}\n","export default class HostApplication {\n    constructor(name, version, apdex) {\n        this.name = name;\n        this.version = version;\n        this.apdex = apdex;\n    }\n\n    getName() {\n        return this.name;\n    }\n\n    getVersion() {\n        return this.version;\n    }\n\n    getApdex() {\n        return this.apdex;\n    }\n\n    /**\n     * Returns true if both apps are the same app.\n     *\n     * We consider both apps to be the same when they have the same name,\n     * version and apdex.\n     */\n    static isEqual(app1, app2) {\n        return (\n            app1.name === app2.name &&\n            app1.version === app2.version &&\n            app1.apdex === app2.apdex\n        );\n    }\n\n    static isLess(app1, app2) {\n        return (\n            app1.apdex > app2.apdex ||\n            (app1.apdex === app2.apdex && app1.name < app2.name) ||\n            (app1.apdex === app2.apdex &&\n                app1.name === app2.name &&\n                app1.version > app2.version)\n        );\n    }\n}\n","import Utils from '../utils';\nimport HostApplication from './HostApplication';\n\nconst NUM_TOP_APPS = 25;\n\n/**\n * Contains an attribute appList with a list of apps ordered by apex.\n */\nexport default class Host {\n    constructor(name) {\n        this.name = name;\n        this.appList = [];\n    }\n\n    static _createHostApp(appData) {\n        return new HostApplication(\n            appData.name,\n            appData.version,\n            appData.apdex\n        );\n    }\n\n    addApp(appData) {\n        const app = Host._createHostApp(appData);\n        const pos = Utils.getElementPosition(\n            this.appList,\n            app,\n            0,\n            this.appList.length - 1,\n            HostApplication.isEqual,\n            HostApplication.isLess\n        );\n        if (this.appList[pos] && HostApplication.isEqual(this.appList[pos], app))\n            throw Error(\n                `${app.toString()} is already on ${this.toString()} app list.`\n            );\n\n        this.appList = Utils.insertElement(this.appList, app, pos);\n    }\n\n    removeApp(appData) {\n        const app = Host._createHostApp(appData);\n        const pos = Utils.getElementPosition(\n            this.appList,\n            app,\n            0,\n            this.appList.length - 1,\n            HostApplication.isEqual,\n            HostApplication.isLess\n        );\n        if (!HostApplication.isEqual(this.appList[pos], app))\n            throw Error(\n                `${app.toString()} is not on ${this.toString()} app list.`\n            );\n\n        this.appList = Utils.removeElement(this.appList, pos);\n    }\n\n    getTopApps() {\n        return this.appList.slice(0, NUM_TOP_APPS);\n    }\n\n    getTop5Apps() {\n        return this.appList.slice(0, 5);\n    }\n\n    getHostName() {\n        return this.name;\n    }\n\n    toString() {\n        return `Host: ${this.name}`;\n    }\n\n    static isEqual(host1, host2) {\n        return host1.name === host2.name;\n    }\n\n    static isLess(host1, host2) {\n        return host1.name < host2.name;\n    }\n}\n","import './titleBarComponent.css';\n\nexport default class TitleBarComponent {\n    constructor(parentNode, userEmail, isList = false, onChange) {\n        this.onChangeCallback = onChange;\n        const titleBarContainer = document.createElement('div');\n        titleBarContainer.classList.add('title-bar-container');\n\n        const titleNode = document.createElement('p');\n        titleNode.classList.add('page-title');\n        titleNode.textContent = 'Apps by Host';\n\n        const emailNode = document.createElement('p');\n        emailNode.classList.add('user-email');\n        emailNode.textContent = `for user ${userEmail}`;\n\n        this.checkboxInput = document.createElement('input');\n        this.checkboxInput.classList.add('checkbox-input');\n        this.checkboxInput.setAttribute('type', 'checkbox');\n        this.checkboxInput.checked = isList;\n        this.checkboxInput.addEventListener(\n            'change',\n            this._onChange.bind(this),\n            false\n        );\n\n        const checkboxText = document.createElement('p');\n        checkboxText.classList.add('checkbox-p');\n        checkboxText.textContent = 'Show as list';\n\n        titleBarContainer.appendChild(titleNode);\n        titleBarContainer.appendChild(emailNode);\n        titleBarContainer.appendChild(this.checkboxInput);\n        titleBarContainer.appendChild(checkboxText);\n        parentNode.appendChild(titleBarContainer);\n    }\n\n    _onChange() {\n        if (this.onChangeCallback)\n            this.onChangeCallback(this.checkboxInput.checked);\n    }\n}\n","import './appComponent.css';\n\nexport default class AppComponent {\n    constructor(parentNode, app) {\n        const appDiv = document.createElement('div');\n        appDiv.classList.add('app-component');\n        appDiv.addEventListener('click', () =>\n            // eslint-disable-next-line no-alert\n            alert(`Version: ${app.getVersion()}`)\n        );\n\n        const apdexField = document.createElement('span');\n        apdexField.classList.add('app-apdex-field');\n        apdexField.textContent = app.getApdex();\n        appDiv.appendChild(apdexField);\n\n        const nameAndContribField = document.createElement('span');\n        nameAndContribField.classList.add('app-name-field');\n        nameAndContribField.textContent = app.getName();\n        appDiv.appendChild(nameAndContribField);\n\n        parentNode.appendChild(appDiv);\n    }\n}\n","import './hostComponent.css';\nimport AppComponent from '../appComponent/AppComponent';\n\nexport const NARROW_STYLE_MODE = 'narrow_mod';\nexport const WIDE_STYLE_MODE = 'wide_mod';\n\nexport default class HostComponent {\n    constructor(parentNode, host, defaultMode = NARROW_STYLE_MODE) {\n        this.parentNode = parentNode;\n\n        this.hostDiv = document.createElement('div');\n        this.hostDiv.classList.add('host-component');\n\n        const hostName = document.createElement('div');\n        hostName.classList.add('host-name');\n        hostName.textContent = host.getHostName();\n        this.hostDiv.appendChild(hostName);\n\n        const appList = document.createElement('div');\n        appList.classList.add('app-list');\n\n        host.getTop5Apps().forEach(app => {\n            // eslint-disable-next-line no-new\n            new AppComponent(appList, app);\n        });\n\n        this.hostDiv.appendChild(appList);\n        this.parentNode.appendChild(this.hostDiv);\n\n        this.changeMode(defaultMode);\n    }\n\n    changeMode(mode) {\n        if (mode === NARROW_STYLE_MODE) {\n            this.hostDiv.classList.remove('wide-component');\n            this.hostDiv.classList.add('narrow-component');\n        } else {\n            // WIDE_STYLE_MODE\n            this.hostDiv.classList.remove('narrow-component');\n            this.hostDiv.classList.add('wide-component');\n        }\n    }\n}\n","import './hostGridComponent.css';\nimport HostComponent, {\n    NARROW_STYLE_MODE,\n    WIDE_STYLE_MODE\n} from '../hostComponent/HostComponent';\n\nexport const GRID_MODE = 'grid_m';\nexport const LIST_MODE = 'list_m';\n\nexport default class HostGridComponent {\n    constructor(parentNode, hostList, defaultMode = GRID_MODE) {\n        this.parentNode = parentNode;\n        this.hostListContainer = document.createElement('div');\n        this.hostListContainer.classList.add('host-grid');\n\n        this.hostNodes = [];\n        hostList.forEach(host => {\n            this.hostNodes.push(\n                new HostComponent(this.hostListContainer, host)\n            );\n        });\n\n        this.parentNode.appendChild(this.hostListContainer);\n\n        this.changeMode(defaultMode);\n    }\n\n    changeMode(mode) {\n        if (mode === GRID_MODE) {\n            this.hostListContainer.classList.remove('list-mode');\n            this.hostListContainer.classList.add('grid-mode');\n\n            this.hostNodes.forEach(hostNode =>\n                hostNode.changeMode(NARROW_STYLE_MODE)\n            );\n        } else {\n            // LIST_MODE.\n            this.hostListContainer.classList.remove('grid-mode');\n            this.hostListContainer.classList.add('list-mode');\n\n            this.hostNodes.forEach(hostNode =>\n                hostNode.changeMode(WIDE_STYLE_MODE)\n            );\n        }\n    }\n}\n","import './hostPage.css';\nimport TitleBarComponent from './components/titleBarComponent/TitleBarComponent';\nimport HostGridComponent, {\n    GRID_MODE,\n    LIST_MODE\n} from './components/hostGridComponent/HostGridComponent';\n\nconst USER_EMAIL = 'pepito@gmail.com';\n\nexport default class HostPage {\n    constructor() {\n        this.parentNode = document.querySelector('#page-content');\n    }\n\n    attachPage(hostList) {\n        // Clean page-content.\n        while (this.parentNode.firstChild) {\n            this.parentNode.removeChild(this.parentNode.firstChild);\n        }\n\n        this.titleBar = new TitleBarComponent(\n            this.parentNode,\n            USER_EMAIL,\n            false,\n            isList => this.hostGrid.changeMode(isList ? LIST_MODE : GRID_MODE)\n        );\n        this.hostGrid = new HostGridComponent(this.parentNode, hostList);\n    }\n}\n","import AppLoader from './loaders/appLoader';\nimport HostTree from './models/HostTree';\nimport HostPage from './views/hostPage';\n\nconst appLoader = new AppLoader();\nconst hostTree = new HostTree();\nappLoader.loadApplications(\n    appsData => {\n        appsData.apps.forEach(appData => {\n            hostTree.addAppToHosts(appData, appData.host);\n        });\n\n        const hostPage = new HostPage();\n        hostPage.attachPage(hostTree.getHostList());\n    },\n    error => {\n        console.error('Error', error.stack);\n        console.error('Error', error.name);\n        console.error('Error', error.message);\n    }\n);\n","/**\n * Manages application data loading.\n *\n * NOTE: By isolating the loading of the application data we will be able to\n * connect to a real server without changing the rest of the code.\n */\nexport default class AppLoader {\n    loadApplications(onLoad, onError) {\n        if (this.appData) {\n            onLoad(this.appData);\n        }\n\n        fetch('src/data/host-app-data.json')\n            .then(response => response.json())\n            .then(myJson => {\n                this.appData = myJson;\n                onLoad(this.appData);\n            })\n            .catch(error => onError(error));\n    }\n}\n","import Utils from '../utils';\nimport Host from './Host';\n\nexport default class HostTree {\n    constructor() {\n        this.hostList = [];\n    }\n\n    /**\n     * Given a host returns the position of this host in our hostList array.\n     * If this host is not on the array, returns the position where it should be\n     * positioned.\n     */\n    _getHostPosition(host) {\n        const pos = Utils.getElementPosition(\n            this.hostList,\n            host,\n            0,\n            this.hostList.length - 1,\n            Host.isEqual,\n            Host.isLess\n        );\n        return pos;\n    }\n\n    /**\n     * Returns host with name hostName.\n     * If the host is not in hostList, throws an exception.\n     */\n    _getHost(hostName) {\n        const mockHost = new Host(hostName);\n        const pos = this._getHostPosition(mockHost);\n        if (!this.hostList[pos] || !Host.isEqual(this.hostList[pos], mockHost))\n            throw Error(`${mockHost.toString()} is not on host tree.`);\n\n        return this.hostList[pos];\n    }\n\n    /**\n     * Returns host with name hostName.\n     * If the host is not in hostList, It will add it to the list and\n     * return it.\n     */\n    _getOrCreateHost(hostName) {\n        const newHost = new Host(hostName);\n        const pos = this._getHostPosition(newHost);\n        if (!this.hostList[pos] || !Host.isEqual(this.hostList[pos], newHost))\n            this.hostList = Utils.insertElement(this.hostList, newHost, pos);\n\n        return this.hostList[pos];\n    }\n\n    getTopAppsByHost(hostName) {\n        const host = this._getHost(hostName);\n        return host.getTopApps();\n    }\n\n    addAppToHosts(appData, hostNames) {\n        hostNames.forEach(hostName => {\n            const host = this._getOrCreateHost(hostName);\n            host.addApp(appData);\n        });\n    }\n\n    removeAppFromHosts(appData, hostNames) {\n        hostNames.forEach(hostName => {\n            const host = this._getHost(hostName);\n            host.removeApp(appData);\n        });\n    }\n\n    getHostList() {\n        return this.hostList;\n    }\n}\n"],"sourceRoot":""}